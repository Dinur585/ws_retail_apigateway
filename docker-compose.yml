version: '3.7'
services:
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - micro-service-network

  mongo-seed:
    build: mongo-seed
    depends_on:
      - mongodb
    networks:
      - micro-service-network

  vault-server:
    image: vault:latest
    ports:
      - 8200:8200
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
    volumes:
      - vaultlogs:/vault/logs
      - vaultfile:/vault/file
    cap_add:
      - IPC_LOCK
    depends_on:
      - mongodb
    networks:
      - micro-service-network


  ws-retail-apigateway:
    image: ws-retail-apigateway
    build: ./ws_retail_apigateway
    ports:
      - 8010:8010
    expose:
      - 8010
    restart: always
    networks:
      - micro-service-network
    depends_on:
      - ws-retail-itemservice
      - ws-retail-orderservice
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: ws-retail-apigateway
      SPRING_CLOUD_CONFIG_URI: http://localhost:8010

  ws-retail-authenticationservice:
    image: ws-retail-authenticationservice
    build: ./ws_retail_authenticationservice
    container_name: ws-retail-authenticationservice
    ports:
      - 8007:8010
    #    expose:
    #      - 8007
    networks:
      - micro-service-network
    restart: always
    depends_on:
      #      - vault-server
      - mongodb


  ws-retail-itemservice:
    image: ws-retail-itemservice
    build: ./ws_retail_itemservice
    container_name: ws-retail-itemservice
    ports:
      - 8009:8009
    #    expose:
    #      - 8009
    networks:
      - micro-service-network
    restart: always
    depends_on:
      - mongodb
    #      - vault-server
    environment:
      - SPRING_PROFILES_ACTIVE:docker
      - SPRING_DATASOURCE_URL:mongodb://mongodb:27017/reach-engine
      - SPRING_DATASOURCE_USERNAME:root
      - SPRING_DATASOURCE_PASSWORD:rootpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO:create
      - SPRING_APPLICATION_NAME:ws-retail-itemservice
      - SPRING_CLOUD_CONFIG_URI:http://ws-retail-apigateway:8010

  ws-retail-orderservice:
    image: ws-retail-orderservice
    build: ./ws_retail_orderservice
    container_name: ws-retail-orderservice
    ports:
      - 8008:8008
    #    expose:
    #      - 8008
    networks:
      - micro-service-network
    restart: always
    depends_on:
      - mongodb
    #      - vault-server
    environment:
      - SPRING_PROFILES_ACTIVE:docker
      - SPRING_DATASOURCE_URL=mongodb://mongodb:27017/reach-engine
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_APPLICATION_NAME:ws-retail-orderservice
      - SPRING_CLOUD_CONFIG_URI:http://ws-retail-apigateway:8010


  react-app:
    build: ./retail_ui
    command: npm start
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/app
    depends_on:
      - ws-retail-apigateway
      - mongodb
    networks:
      - micro-service-network

networks:
  micro-service-network:

volumes:
  mongodb_data_container:
  vaultlogs:
  vaultfile:
